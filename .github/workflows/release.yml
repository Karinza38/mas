#
# .github/workflows/release.yml
#
---
name: release
defaults:
  run:
    # Prefixes all `run` commands with the following command to force them to run outside Rosetta.
    shell: arch -arm64 /bin/bash --noprofile --norc -eo pipefail {0}
on:
  release:
    types: [published]
jobs:
  start:
    runs-on: macos-15
    outputs:
      dry_run: ${{ steps.dry_run.outputs.dry_run }}
      mas_version: ${{ steps.mas_version.outputs.mas_version }}
      pre_release: ${{ steps.pre_release.outputs.pre_release }}
      tap_path: ${{ steps.tap_path.outputs.tap_path }}
    steps:
      # Logs event details and sets `DRY_RUN` env var
      # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#setting-an-environment-variable
      # https://docs.github.com/en/webhooks/webhook-events-and-payloads?actionType=published#release
      - name: 🔈 Log release event
        # This step will only run for a real 'release' event.
        if: ${{ github.event.release.name != '' }}
        run: |
          echo 'Triggered by a release publication event (wet run)'
          echo 'release.name: ${{ github.event.release.name }}'
          echo 'release.tag_name: ${{ github.event.release.tag_name }}'
          echo 'release.target_commitish: ${{ github.event.release.target_commitish }}'
          echo $'release.body: \n${{ github.event.release.body }}'

      - id: dry_run
        run: |
          echo DRY_RUN=false >>"${GITHUB_OUTPUT}"

      - id: mas_version
        run: |
          echo 'MAS_VERSION=${{ github.event.release.tag_name }}' >>"${GITHUB_OUTPUT}"

      - id: pre_release
        run: |
          echo "PRE_RELEASE=$(grep -q '-' <<<"${MAS_VERSION}" && echo 'true' || echo 'false')" >>"${GITHUB_OUTPUT}"

      - id: tap_path
        run: |
          echo "TAP_PATH='$(brew --repo mas-cli/tap)'" >>"${GITHUB_OUTPUT}"

  pkg-installer:
    runs-on: macos-15
    needs: start
    steps:
      - uses: actions/checkout@v4
        with:
          # A fetch-depth of 0 includes all history and tags for script/version
          fetch-depth: 0
          ref: ${{ needs.start.outputs.mas_version }}

      - name: 👢 Bootstrap
        run: |
          script/bootstrap -f

      # Important to trigger a universal build first as package just works with
      # the `mas` binary in finds in the build dir.
      - name: 🏗️ Build Universal
        run: |
          script/build --universal

      - name: 📦 macOS Package
        run: |
          script/package

      - name: 🚀 Upload mas.pkg
        env:
          GH_TOKEN: ${{ github.token }}
          DRY_RUN: ${{ needs.start.outputs.dry_run }}
        if: ${{ needs.start.outputs.dry_run == 'false' }}
        run: |
          gh release upload '${{ needs.start.outputs.mas_version }}' \
            .build/mas.pkg

  homebrew-tap:
    runs-on: macos-15
    needs: start
    steps:
      - name: 📺 Checkout mas repo
        uses: actions/checkout@v4
        with:
          # A fetch-depth of 0 includes all history and tags for script/version
          fetch-depth: 0
          ref: ${{ needs.start.outputs.mas_version }}

      - name: 👢 Bootstrap
        run: |
          script/bootstrap -f

      # The mas-cli/homebrew-tap repo needs to be checked out using the current
      # GitHub credentials in order to open a PR. However, the `brew tap` command
      # must be run for Homebrew to see the dir as a tap.
      # This is necessary to avoid the following error:
      # Error: No available formula or cask with the name "mas-cli/tap/mas".
      - name: 🚰 Tap mas tap
        env:
          TAP_PATH: ${{ needs.start.outputs.tap_path }}
        run: |
          TAPS_PATH="$(realpath "$(brew --repo mas-cli/tap)/../..")"
          rm -rf "${TAPS_PATH}"
          mkdir Taps
          ln -s "$(realpath Taps)" "${TAPS_PATH}"
          brew tap mas-cli/tap

      # Checkout with a token for write access
      - name: 🚰 Re-clone mas tap
        uses: actions/checkout@v4
        with:
          repository: mas-cli/homebrew-tap
          token: ${{ secrets.DEPLOY_TOKEN }}
          path: Taps/mas-cli/homebrew-tap

      - name: 🔧 Configure Git Author
        run: |
          git config --global user.name 'masclibot'
          git config --global user.email 'masclibot@users.noreply.github.com'

      - name: ⤴️ Open mas tap PR
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
          DRY_RUN: ${{ needs.start.outputs.dry_run }}
        working-directory: ${{ needs.start.outputs.tap_path }}
        run: |
          brew bump-formula-pr \
            --strict \
            --online \
            --tag '${{ needs.start.outputs.mas_version }}' \
            --revision "$(git rev-list -n 1 '${{ needs.start.outputs.mas_version }}')" \
            mas-cli/tap/mas

      - name: 🚰 Update mas tap formula
        env:
          GH_TOKEN: ${{ github.token }}
          DRY_RUN: ${{ needs.start.outputs.dry_run }}
        run: |
          DRY_RUN="${DRY_RUN}" \
            script/bottle

      - name: 🚀 Upload Bottles
        env:
          GH_TOKEN: ${{ github.token }}
          DRY_RUN: ${{ needs.start.outputs.dry_run }}
        if: ${{ needs.start.outputs.dry_run == 'false' }}
        run: |
          gh release upload '${{ needs.start.outputs.mas_version }}' \
            .build/bottles/mas-*.bottle.tar.gz

  homebrew-core:
    runs-on: macos-15
    needs: [start, homebrew-tap]
    if: ${{ needs.start.outputs.pre_release == 'false' }}
    steps:
      - uses: actions/checkout@v4
        with:
          # A fetch-depth of 0 includes all history and tags for script/version
          fetch-depth: 0
          ref: ${{ needs.start.outputs.mas_version }}

      - name: 👢 Bootstrap
        run: |
          script/bootstrap -f

      - name: 🔧 Configure Git Author
        run: |
          git config --global user.name 'masclibot'
          git config --global user.email 'masclibot@users.noreply.github.com'

      - name: 🍺 Update Homebrew mas formula
        env:
          GH_TOKEN: ${{ github.token }}
          HOMEBREW_GITHUB_API_TOKEN: ${{ secrets.HOMEBREW_GITHUB_API_TOKEN }}
          DRY_RUN: ${{ needs.start.outputs.dry_run }}
        run: |
          DRY_RUN="${DRY_RUN}" script/brew_core_update
