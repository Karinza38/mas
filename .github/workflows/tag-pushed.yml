#
# .github/workflows/tag-pushed.yml
#
---
name: tag-pushed
on:
  push:
    tags: ["**"]
defaults:
  run:
    # Force all run commands to not use Rosetta 2
    shell: arch -arm64 /bin/zsh {0}
jobs:
  tag-pushed:
    if: github.repository == 'mas-cli/mas'
    runs-on: macos-15
    env:
      GH_TOKEN: ${{github.token}}
    steps:
      - name: üõí Checkout mas repo
        env:
          GIT_CONFIG_COUNT: 1
          GIT_CONFIG_KEY_0: init.defaultBranch
          GIT_CONFIG_VALUE_0: ${{github.event.repository.default_branch}}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üñã Delete tag lacking valid signature
        run: |
          git fetch --tags --force
          if [[\
           "$(git cat-file tag "${GITHUB_REF_NAME}")" != *'-----BEGIN SSH SIGNATURE-----'*'-----END SSH SIGNATURE-----'\
           ]]; then
            printf $'Error: Deleting tag %s because it does not have a valid signature\n' "${GITHUB_REF_NAME}" >&2
            git push -d origin "${GITHUB_REF_NAME}"
            exit 1
          fi

      - name: üè∑ Exit if not a version tag
        run: |
          if [[ ! "${GITHUB_REF_NAME}" =~ '^v[[:digit:]]+(\.[[:digit:]]+)*(-(alpha|beta|rc)\.[[:digit:]]+)?$' ]]; then
            printf $'Exiting because %s is not a version tag\n' "${GITHUB_REF_NAME}"
            exit 2
          fi

      - name: üå≥ Delete version tag not on main
        env:
          DEFAULT_BRANCH_NAME: ${{github.event.repository.default_branch}}
        run: |
          git fetch --force origin "${DEFAULT_BRANCH_NAME}:${DEFAULT_BRANCH_NAME}"
          if ! git merge-base --is-ancestor "${GITHUB_REF_NAME}" "${DEFAULT_BRANCH_NAME}"; then
            printf $'Error: Deleting version tag %s because it is not on the %s branch\n' "${GITHUB_REF_NAME}"\
             "${DEFAULT_BRANCH_NAME}" >&2
            git push -d origin "${GITHUB_REF_NAME}"
            exit 3
          fi

      - name: üì¶ Build universal executable & package it in an installer
        run: |
          script/package

      - name: üìù Create draft release
        run: |
          gh release create\
           -d\
           -t "${GITHUB_REF_NAME}: ${$(git tag -l "${GITHUB_REF_NAME}" --format='%(contents)')%%$'\n'*}"\
           --generate-notes\
          ${"${GITHUB_REF_NAME//[^-]/}":+ -p}\
           "${GITHUB_REF_NAME}"

      - name: üì§ Upload installer
        run: |
          gh release upload "${GITHUB_REF_NAME}" ".build/mas-${GITHUB_REF_NAME#v}.pkg"

      - name: üö∞ Bump mas-cli/tap/mas formula
        env:
          HOMEBREW_GITHUB_API_TOKEN: ${{secrets.HOMEBREW_GITHUB_API_TOKEN}}
        run: |
          brew tap mas-cli/tap
          brew bump-formula-pr\
           --tag "${GITHUB_REF_NAME}"\
           --revision "${GITHUB_SHA}"\
           --no-fork\
           --no-browse\
           --online\
           --strict\
           --verbose\
           mas-cli/tap/mas
