#!/bin/bash -eu
#
# script/version_bump
# mas
#
# Increments the marketing version of mas.
#

mas_dir="$(readlink -fn "$(dirname "${BASH_SOURCE:-"${0}"}")/..")"

if ! cd -- "${mas_dir}"; then
  printf $'Error: Could not cd into mas directory: %s\n' "${mas_dir}" >&2
  exit 1
fi

LOCAL_MAS_FORMULA_PATH=Homebrew/mas.rb
LOCAL_TAP_FORMULA_PATH=Homebrew/mas-tap.rb
SWIFT_PACKAGE=Sources/mas/Package.swift

function usage {
  echo 'Usage: version_bump <version_tag> [<sha1_hash>]' >&2
  echo '  existing tag name' >&2
  echo '  sha will be inferred from the given tag if not provided' >&2
  exit 1
}

if [[ "${#}" -lt 1 ]]; then
  usage
fi

# arg 1 - version tag
MAS_VERSION="${1}"

# arg 2 - revision (commit hash)
# If arg 2 wasn't supplied or is empty, obtain revision from ${MAS_VERSION} version tag
REVISION="${2:-"$(git rev-parse "${MAS_VERSION}")"}"

echo "MAS_VERSION: ${MAS_VERSION}"
echo "REVISION: ${REVISION}"

# Write new version into swift package
cat <<EOF >"${SWIFT_PACKAGE}"
/// Generated by \`script/version_bump\`.
enum Package {
    static let version = "${MAS_VERSION#v}"
}
EOF

echo
cat "${SWIFT_PACKAGE}"

# Write new version into brew formulae
for file in "${LOCAL_MAS_FORMULA_PATH}" "${LOCAL_TAP_FORMULA_PATH}"; do
  echo "${file}"
  sd '( +tag: +)"[^"]+"' "\$1\"${MAS_VERSION}\"" "${file}"
  sd '( +revision: +)"[^"]+"' "\$1\"${REVISION}\"" "${file}"
  sd '( +root_url "https://github.com/mas-cli/mas/releases/download/).+' "\${1}${MAS_VERSION}\"" "${file}"
done
