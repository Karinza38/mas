#!/bin/bash -e
#
# script/brew_formula_update
# mas
#
# Updates mas Homebrew core formula:
# https://github.com/Homebrew/homebrew-core/blob/master/Formula/mas.rb
#
# brew bump-formula-pr --help
#

CORE_TAP_PATH="$(brew --repository homebrew/core)"
CORE_FORMULA_PATH="${CORE_TAP_PATH}/Formula"
CORE_MAS_FORMULA_PATH="${CORE_FORMULA_PATH}/m/mas.rb"

PROJECT_PATH="$(git rev-parse --show-toplevel)"
SWIFT_PACKAGE="${PROJECT_PATH}/Sources/MasKit/Package.swift"
LOCAL_MAS_FORMULA_PATH="${PROJECT_PATH}/Homebrew/mas.rb"
LOCAL_TAP_FORMULA_PATH="${PROJECT_PATH}/Homebrew/mas-tap.rb"

function usage {
  echo "Usage: brew_formula_update [0.0] [sha1_hash]"
  echo "- version will be inferred using version script if not provided"
  echo "- sha will be inferred from the current commit if not provided"
  exit 1
}

if [[ $# -gt 3 ]]; then
  usage
fi

# arg 1 - version tag
if test -n "${1}"; then
  MAS_VERSION="${1}"
else
  MAS_VERSION="v$(script/version)"
fi

echo "MAS_VERSION: ${MAS_VERSION}"

# arg 2 - revision (commit hash)
if test -n "${2}"; then
  REVISION="${2}"
else
  REVISION=$(git rev-parse "${MAS_VERSION}")
fi

echo "REVISION: ${REVISION}"

################################################################################
#
# Update Version
#

script/version_bump "${MAS_VERSION}" "$REVISION"

cp -v "${LOCAL_MAS_FORMULA_PATH}" "${CORE_MAS_FORMULA_PATH}"

branch_name="releases/release-${MAS_VERSION}"
git branch "${branch_name}"
git switch "${branch_name}"

git add \
  "${SWIFT_PACKAGE}" \
  "${LOCAL_MAS_FORMULA_PATH}" \
  "${LOCAL_TAP_FORMULA_PATH}"

git commit --message="ðŸ”– Version ${MAS_VERSION}"

################################################################################
#
# Preflight checks
#

# Uninstall if necessary
brew remove mas 2>/dev/null || true
brew remove mas-cli/tap/mas 2>/dev/null || true

# Uninstall if still found on path
if command -v mas >/dev/null; then
  script/uninstall || true
fi

# Ensure core is tapped
if ! test -d "${CORE_TAP_PATH}"; then
  brew tap homebrew/core
fi

brew update

################################################################################
#
# Build the formula for the current macOS version and architecture.
#

# Force brew to use the local repository instead of the API.
# Disable API before any install, reinstall or upgrade commands.
export HOMEBREW_NO_INSTALL_FROM_API=1

# Install mas from source
brew reinstall mas

# Audit formula
brew audit --strict mas-cli/tap/mas
brew style mas-cli/tap/mas

################################################################################
#
# Update Homebrew
#
echo "Checking to see if this update can be a simple bump."
diff "${LOCAL_MAS_FORMULA_PATH}" "${CORE_MAS_FORMULA_PATH}"

echo "==> ðŸ§ª Updating homebrew-core formula mas (${MAS_VERSION}, ${REVISION})"

echo "Validating formula"
brew bump-formula-pr \
  --tag="${MAS_VERSION}" \
  --revision="${REVISION}" \
  --strict \
  --verbose \
  mas

# brew exit status
status=$?
if test ${status} -ne 0; then
  echo "Formula did not validate using 'brew bump-formula-pr'"
  exit ${status}
fi

pushd "${CORE_FORMULA_PATH}" || exit 2

dry_run=''
echo "Updating formula"
# if test $formula_revisions -eq 1; then
#   # Options to
#   dry_run="--dry-run --write"
# fi

brew bump-formula-pr \
  --tag="${MAS_VERSION}" \
  --revision="${REVISION}" \
  --commit \
  --fork-org mas-cli \
  --online \
  --strict \
  --verbose \
  "${dry_run}" \
  mas

################################################################################
#
# Create pr on mas-cli/mas
#

gh pr create \
  --assignee phatblat \
  --base main \
  --draft \
  --fill

################################################################################
#
# Create pr on mas-cli/homebrew-tap
#
